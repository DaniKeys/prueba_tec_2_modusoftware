openapi: 3.0.1
info:
  title: API REST Library
  version: 1.0.0
servers:
  - url: http://localhost:9092
paths:
  /book/{id_book}:
    put:
      tags:
        - libro-controller
      summary: Agregar Stock
      operationId: updateStock
      parameters:
        - name: id_book
          in: path
          description: Id del libro para agregar stock
          required: true
          schema:
            type: integer
            format: int32
          example: 3
      requestBody:
        description: 'Agrege a la propiedad stock la cantidad deseada '
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroDTO'
            example: '''stock'': 5'
        required: true
      responses:
        '201':
          description: Actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '204':
          description: No existe un libro con ID ingresado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '304':
          description: Stock sin cambios
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '400':
          description: Caracteres no validos
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '500':
          description: Error del servidor
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibroDTO'
  /book:
    get:
      tags:
        - libro-controller
      summary: Obtener todos los libros
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'
    post:
      tags:
        - libro-controller
      summary: Crear libro
      operationId: createBook
      requestBody:
        description: 'Agregue en el PayLoad la informacion del libro a crear '
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroDTO'
        required: true
      responses:
        '200':
          description: Responde con el ID del libro creado
          content:
            application/json:
              example: '''12'''
        '400':
          description: Caracteres no validos
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '409':
          description: Duplicate ISBN this property is UNIQUE or All Ready ID exist
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        '500':
          description: Error del servidor
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /book/buy:
    post:
      tags:
        - venta-controller
      summary: Compra de libros
      operationId: buyBook
      requestBody:
        description: 'Agrege el ID y cantidad de libros a comprar '
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VentaDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOReturn'
        '204':
          description: No hay esa cantidad requerida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOReturn'
        '304':
          description: No se vendio ningun libro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOReturn'
        '404':
          description: ID no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOReturn'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOReturn'
  /v2/api-docs:
    get:
      tags:
        - swagger-2-controller-web-mvc
      operationId: getDocumentation
      parameters:
        - name: group
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            application/hal+json:
              schema:
                type: string
  /swagger-resources:
    get:
      tags:
        - api-resource-controller
      operationId: swaggerResources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwaggerResource'
  /swagger-resources/configuration/ui:
    get:
      tags:
        - api-resource-controller
      operationId: uiConfiguration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiConfiguration'
  /swagger-resources/configuration/security:
    get:
      tags:
        - api-resource-controller
      operationId: securityConfiguration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityConfiguration'
  /book/nombre/{nombre_libro}:
    get:
      tags:
        - libro-controller
      summary: Buscar libro por nombre_libro
      operationId: findByBookName
      parameters:
        - name: nombre_libro
          in: path
          description: Inserte el Nombre del libro a buscar
          required: true
          schema:
            type: string
          example: El Camino
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibroDTO'
        '204':
          description: No existe un libro con nombre ingresado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibroDTO'
  /book/allVentas:
    get:
      tags:
        - venta-controller
      summary: Obtener todos los ventas
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDTOGetAll'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VentaDTOGetAll'
components:
  schemas:
    LibroDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        autor:
          type: string
        editorial:
          type: string
        fecha:
          type: string
        numeroPag:
          type: integer
          format: int32
        stock:
          type: integer
          format: int32
        valor:
          type: number
          format: double
        isbn:
          type: string
    VentaDTO:
      type: object
      properties:
        idVenta:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        nombre:
          type: string
        fechaVenta:
          type: string
          format: date-time
        valor:
          type: number
          format: double
        cantidad:
          type: integer
          format: int32
    VentaDTOReturn:
      type: object
      properties:
        libroId:
          type: integer
          format: int32
        libroName:
          type: string
        valor:
          type: number
          format: double
    SwaggerResource:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        swaggerVersion:
          type: string
        location:
          type: string
          deprecated: true
    UiConfiguration:
      type: object
      properties:
        deepLinking:
          type: boolean
        displayOperationId:
          type: boolean
        defaultModelsExpandDepth:
          type: integer
          format: int32
        defaultModelExpandDepth:
          type: integer
          format: int32
        defaultModelRendering:
          type: string
          enum:
            - example
            - model
        displayRequestDuration:
          type: boolean
        docExpansion:
          type: string
          enum:
            - none
            - list
            - full
        filter:
          type: object
        maxDisplayedTags:
          type: integer
          format: int32
        operationsSorter:
          type: string
          enum:
            - alpha
            - method
        showExtensions:
          type: boolean
        showCommonExtensions:
          type: boolean
        tagsSorter:
          type: string
          enum:
            - alpha
        validatorUrl:
          type: string
        supportedSubmitMethods:
          type: array
          items:
            type: string
        swaggerBaseUiUrl:
          type: string
    SecurityConfiguration:
      type: object
      properties:
        apiKey:
          type: string
          deprecated: true
        apiKeyVehicle:
          type: string
          deprecated: true
        apiKeyName:
          type: string
          deprecated: true
        clientId:
          type: string
        clientSecret:
          type: string
        realm:
          type: string
        appName:
          type: string
        scopeSeparator:
          type: string
        additionalQueryStringParams:
          type: object
          additionalProperties:
            type: object
        useBasicAuthenticationWithAccessCodeGrant:
          type: boolean
        enableCsrfSupport:
          type: boolean
    VentaDTOGetAll:
      type: object
      properties:
        id:
          type: integer
          format: int32
        libroId:
          type: integer
          format: int32
        libroName:
          type: string
        fechaVenta:
          type: string
          format: date-time
        cantidad:
          type: integer
          format: int32

